#code is based on IBM Developer Skills Code by Azim Hirjani, Malika Singla,	Lavanya
			

#installing required dependencies
!pip install pycoingecko
!pip install plotly
!pip install mplfinance

#import packages
import pandas as pd
import numpy as np
import plotly.graph_objects as go
from plotly.offline import plot
import matplotlib.pyplot as plt
import datetime
from pycoingecko import CoinGeckoAPI
from mplfinance.original_flavor import candlestick2_ohlc

#sample dictionary and conversion to Panda dataframe to check functionality
dict_={'a':[11,21,31],'b':[12,22,32]}
df=pd.DataFrame(dict_)
type(df)
df

#instantiation of interface
cg = CoinGeckoAPI()

#getting data from Coingecko
bitcoin_data = cg.get_coin_market_chart_by_id(id='bitcoin', vs_currency='eur', days=30)

#checking functionality
type(bitcoin_data)

#only taking prices from response
bitcoin_price_data = bitcoin_data['prices']

#checking functionality
bitcoin_price_data[0:5]

#converting into panda dataframe
prices_and_times = pd.DataFrame(bitcoin_price_data, columns=['TimeStamp', 'Price'])

#converting timestamp into a readable format
prices_and_times['date'] = prices_and_times['TimeStamp'].apply(lambda d: datetime.date.fromtimestamp(d/1000.0))

#making data into candlestick format
candlestick_data = prices_and_times.groupby(prices_and_times.date, as_index=False).agg({"Price": ['min', 'max', 'first', 'last']})

#creating the diagram
fig = go.Figure(data=[go.Candlestick(x=candlestick_data['date'],
                open=candlestick_data['Price']['first'], 
                high=candlestick_data['Price']['max'],
                low=candlestick_data['Price']['min'], 
                close=candlestick_data['Price']['last'])
                ])

fig.update_layout(xaxis_rangeslider_visible=False)
fig.show()
